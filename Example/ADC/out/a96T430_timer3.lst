C51 COMPILER V9.60.7.0   a96T428_TIMER3                                                    01/09/2025 13:29:42 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE a96T428_TIMER3
OBJECT MODULE PLACED IN .\out\a96T428_timer3.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Driver\a96T428_timer3.c LARGE OPTIMIZE(8,SPEED) BROWSE NOAREGS INC
                    -DIR(..\..\Driver;.\src) DEBUG OBJECTEXTEND PRINT(.\out\a96T428_timer3.lst) TABS(2) OBJECT(.\out\a96T428_timer3.obj)

line level    source

   1          /**
   2           *******************************************************************************
   3           * @file        a96T428_timer3.c
   4           * @author      ABOV R&D Division
   5           * @brief       Timer3
   6           *
   7           * Copyright 2020 ABOV Semiconductor Co.,Ltd. All rights reserved.
   8           *
   9           * This file is licensed under terms that are found in the LICENSE file
  10           * located at Document directory.
  11           * If this file is delivered or shared without applicable license terms,
  12           * the terms of the BSD-3-Clause license shall be applied.
  13           * Reference: https://opensource.org/licenses/BSD-3-Clause
  14           ******************************************************************************/
  15          
  16          /*******************************************************************************
  17          * Included File
  18          *******************************************************************************/
  19          #include "a96T428_timer3.h"
  20          
  21          /*******************************************************************************
  22          * Private Pre-processor Definition & Macro
  23          *******************************************************************************/
  24          
  25          /*******************************************************************************
  26          * Private Typedef
  27          *******************************************************************************/
  28          
  29          /*******************************************************************************
  30          * Private Variable
  31          *******************************************************************************/
  32          
  33          /*******************************************************************************
  34          * Private Function Prototype
  35          *******************************************************************************/
  36          bit fTimer3_int=0;
  37          
  38          /*******************************************************************************
  39          * Public Function
  40          *******************************************************************************/
  41          
  42          /**
  43          * @brief    Initialize timer3 peripheral
  44          * @param   mode   This parameter contains the mode of timer.
  45          *
  46          *         - T3_COUNTER_MODE             = 0
  47          *         - T3_CAPTURE_MODE             = 1
  48          *         - T3_PPG_ONESHOT_MODE             = 2
  49          *         - T3_PPG_REPEAT_MODE            = 3
  50          * @param   freq This parameter contains the selection of frequency.
  51          *
  52          *         - TIMER3_DIV512             = 0
  53          *         - TIMER3_DIV128             = 1
  54          *         - TIMER3_DIV32              = 2
C51 COMPILER V9.60.7.0   a96T428_TIMER3                                                    01/09/2025 13:29:42 PAGE 2   

  55          *         - TIMER3_DIV8               = 3
  56          *         - TIMER3_DIV4             = 4
  57          *         - TIMER3_DIV2             = 5
  58          *         - TIMER3_DIV1             = 6
  59          *         - TIMER3_EXT_CLK            = 7
  60          * @return   None
  61          */
  62          void Timer3_Initial(uint8_t mode, uint8_t freq)
  63          {
  64   1        uint8_t temp_reg, temp_reg2;
  65   1        
  66   1        temp_reg = T3CRH;
  67   1        /* Set timer mode & frequency source */
  68   1        temp_reg &= ~(0x3 << 4);
  69   1        temp_reg |= ((mode << 4) | (0x1 << 0));
  70   1        
  71   1        temp_reg2 = T3CRL;
  72   1        temp_reg2 &= ~((0x7 << 5) | (0x1 << 0));
  73   1        if(mode >= T3_PPG_ONESHOT_MODE)
  74   1          temp_reg2 |= (freq << 5);
  75   1        else
  76   1          temp_reg2 |= ((freq << 5) | (0x1 << 0));
  77   1        
  78   1        T3CRH = temp_reg;
  79   1        T3CRL = temp_reg2;
  80   1      }
  81          
  82          /**
  83          * @brief   Set Timer3 Clock source edge selection for External Clock
  84          * @param   edge   This parameter contains the value of edge
  85          *
  86          *         - T3_FALLING_EDGE             = 0
  87          *         - T3_RISING_EDGE              = 1
  88          * @return   None
  89          */
  90          void Time3_SetExternalClockEdge(uint8_t edge) 
  91          {
  92   1        uint8_t temp_reg;
  93   1        
  94   1        temp_reg = T3CRL;
  95   1        temp_reg  &= ~(0x02);
  96   1        temp_reg  |= (edge << 1);
  97   1        
  98   1        T3CRL = temp_reg;
  99   1      }
 100          
 101          
 102          /**
 103          * @brief   Set Timer3 Counter mode operation
 104          * @param   match_count    This parameter contains the value of timer match count(0~0xFFFF).
 105          * @return   None
 106          */
 107          void Timer3_SetMatchCounter(uint16_t match_count) 
 108          {
 109   1        T3ADR = match_count;
 110   1      }
 111          
 112          /**
 113          * @brief   Set Timer3 PPG Polarity
 114          * @param   polarity   This parameter contains the value of polarity.
 115          *
 116          *         - T3_START_HIGH             = 0
C51 COMPILER V9.60.7.0   a96T428_TIMER3                                                    01/09/2025 13:29:42 PAGE 3   

 117          *         - T3_START_LOW              = 1
 118          * @return   None
 119          */
 120          void Timer3_SetPPGPolarity(uint8_t polarity) 
 121          {
 122   1        uint8_t temp_reg;
 123   1        
 124   1        temp_reg = T3CRL;
 125   1        temp_reg &= ~(0x04); 
 126   1        temp_reg |= (polarity << 2);
 127   1        
 128   1        T3CRL = temp_reg;
 129   1      }
 130          
 131          /**
 132          * @brief   Set Timer3 PPG mode duty counter
 133          * @param   count    This parameter contains the value of timer duty count(0~0xFFFF).
 134          * @return   None
 135          */
 136          void Timer3_SetPPGDutyCounter(uint16_t count) 
 137          {
 138   1        T3BDR = count;
 139   1      }
 140          
 141          /**
 142          * @brief   Set Timer3 PPG mode period counter
 143          * @param   count    This parameter contains the value of timer period count(1~0xFFFF).
 144          * @return   None
 145          */
 146          void Timer3_SetPPGPeriodCounter(uint16_t count) 
 147          {
 148   1        T3ADR = count;
 149   1      }
 150          
 151          
 152          /**
 153          * @brief   Get Timer3 Capture mode operation
 154          * @param   None
 155          * @return   The value of timer capture data(16bit)
 156          */
 157          uint16_t Timer3_GetCaptureValue(void) 
 158          {
 159   1        return T3BDR;
 160   1      }
 161          
 162          /**
 163          * @brief   Clear the value of Timer3 counter data 
 164          * @param   None
 165          * @return   None
 166          */
 167          void Timer3_ClearCountData(void) 
 168          {
 169   1        T3CRH |= 0x01;
 170   1      }
 171          
 172          /**
 173          * @brief    Start Timer3 operation
 174          * @param   None
 175          * @return   None
 176          */
 177          void Timer3_Start(void) 
 178          {
C51 COMPILER V9.60.7.0   a96T428_TIMER3                                                    01/09/2025 13:29:42 PAGE 4   

 179   1        T3CRH |= 0x80;
 180   1      }
 181          
 182          /**
 183          * @brief    Stop Timer3 operation
 184          * @param   None
 185          * @return   None
 186          */
 187          void Timer3_Stop(void) 
 188          {
 189   1        T3CRH &= ~0x80;
 190   1      }
 191          
 192          /**
 193          * @brief    Configure Timer3 interrupt
 194          * @param   enable   This parameter contains the enable of timer interrupt
 195          *
 196          *       - FLASE                       = 0
 197          *       - TRUE                        = 1
 198          * @return   None
 199          */
 200          void Timer3_ConfigureInterrupt(uint8_t enable) 
 201          {
 202   1        if(enable)
 203   1          IE2 |= 0x10;
 204   1        else
 205   1          IE2 &= ~0x10;
 206   1      }
 207          
 208          /**
 209          * @brief    Claer Timer3 interrupt
 210          * @param   None
 211          * @return   None
 212          */
 213          void Timer3_ClearInterruptFlag(void) 
 214          {
 215   1        T3CRL &= ~0x10;
 216   1      }
 217          
 218          void Timer3_Int_Flag_Polling(void) 
 219          {
 220   1        if(T3CRL & T3IFR) 
 221   1        {
 222   2          T3CRL &= ~T3IFR; 
 223   2          fTimer3_int=1;
 224   2        }
 225   1      }
 226          
 227          /* --------------------------------- End Of File ------------------------------ */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    191    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
