C51 COMPILER V9.60.7.0   a96T428_TIMER1                                                    01/09/2025 13:29:42 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE a96T428_TIMER1
OBJECT MODULE PLACED IN .\out\a96T428_timer1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Driver\a96T428_timer1.c LARGE OPTIMIZE(8,SPEED) BROWSE NOAREGS INC
                    -DIR(..\..\Driver;.\src) DEBUG OBJECTEXTEND PRINT(.\out\a96T428_timer1.lst) TABS(2) OBJECT(.\out\a96T428_timer1.obj)

line level    source

   1          /**
   2           *******************************************************************************
   3           * @file        a96T428_timer1.c
   4           * @author      ABOV R&D Division
   5           * @brief       Timer1
   6           *
   7           * Copyright 2020 ABOV Semiconductor Co.,Ltd. All rights reserved.
   8           *
   9           * This file is licensed under terms that are found in the LICENSE file
  10           * located at Document directory.
  11           * If this file is delivered or shared without applicable license terms,
  12           * the terms of the BSD-3-Clause license shall be applied.
  13           * Reference: https://opensource.org/licenses/BSD-3-Clause
  14           ******************************************************************************/
  15          
  16          
  17          /*******************************************************************************
  18          * Included File
  19          *******************************************************************************/
  20          #include "a96T428_timer1.h"
  21          
  22          /*******************************************************************************
  23          * Private Pre-processor Definition & Macro
  24          *******************************************************************************/
  25          
  26          /*******************************************************************************
  27          * Private Typedef
  28          *******************************************************************************/
  29          
  30          /*******************************************************************************
  31          * Private Variable
  32          *******************************************************************************/
  33          bit fTimer1_int=0;
  34          
  35          /*******************************************************************************
  36          * Private Function Prototype
  37          *******************************************************************************/
  38          
  39          /*******************************************************************************
  40          * Public Function
  41          *******************************************************************************/
  42          
  43          /**
  44          * @brief    Initialize timer1 peripheral
  45          * @param   mode   This parameter contains the mode of timer.
  46          *
  47          *         - T1_COUNTER_MODE           = 0
  48          *         - T1_CAPTURE_MODE           = 1
  49          *         - T1_PPG_ONESHOT_MODE           = 2
  50          *         - T1_PPG_REPEAT_MODE          = 3
  51          * @param   freq This parameter contains the selection of frequency.
  52          *
  53          *         - TIMER1_DIV2048            = 0
  54          *         - TIMER1_DIV512             = 1
C51 COMPILER V9.60.7.0   a96T428_TIMER1                                                    01/09/2025 13:29:42 PAGE 2   

  55          *         - TIMER1_DIV64              = 2
  56          *         - TIMER1_DIV8               = 3
  57          *         - TIMER1_DIV4             = 4
  58          *         - TIMER1_DIV2             = 5
  59          *         - TIMER1_DIV1             = 6
  60          *         - TIMER1_EXT_CLK            = 7
  61          * @return   None
  62          */
  63          void Timer1_Initial(uint8_t mode, uint8_t freq)
  64          {
  65   1        uint8_t temp_reg, temp_reg2;
  66   1        
  67   1        temp_reg = T1CRH;
  68   1        /* Set timer mode & frequency source */
  69   1        temp_reg &= ~(0x3 << 4);
  70   1        temp_reg |= ((mode << 4) | (0x1 << 0));
  71   1        
  72   1        temp_reg2 = T1CRL;
  73   1        temp_reg2 &= ~((0x7 << 5) | (0x1 << 0));
  74   1        if(mode >= T1_PPG_ONESHOT_MODE)
  75   1          temp_reg2 |= (freq << 5);
  76   1        else
  77   1          temp_reg2 |= ((freq << 5) | (0x1 << 0));
  78   1        
  79   1        T1CRH = temp_reg;
  80   1        T1CRL = temp_reg2;
  81   1      }
  82          
  83          /**
  84          * @brief   Set Timer1 Clock source edge selection for External Clock
  85          * @param   edge   This parameter contains the value of edge
  86          *
  87          *         - T1_FALLING_EDGE             = 0
  88          *         - T1_RISING_EDGE            = 1
  89          * @return   None
  90          */
  91          void Timer1_SetExternalClockEdge(uint8_t edge) 
  92          {
  93   1        uint8_t temp_reg;
  94   1        
  95   1        temp_reg = T1CRL;
  96   1        temp_reg  &= ~(0x02);
  97   1        temp_reg  |= (edge << 1);
  98   1        
  99   1        T1CRL = temp_reg;
 100   1      }
 101          
 102          
 103          /**
 104          * @brief   Set Timer1 Counter mode operation
 105          * @param   match_count    This parameter contains the value of timer match count(0~0xFFFF).
 106          * @return   None
 107          */
 108          void Timer1_SetMatchCounter(uint16_t match_count) 
 109          {
 110   1        T1ADR = match_count;
 111   1      }
 112          
 113          /**
 114          * @brief   Set Timer1 PPG Polarity
 115          * @param   polarity   This parameter contains the value of polarity.
 116          *
C51 COMPILER V9.60.7.0   a96T428_TIMER1                                                    01/09/2025 13:29:42 PAGE 3   

 117          *         - T1_START_HIGH             = 0
 118          *         - T1_START_LOW              = 1
 119          * @return   None
 120          */
 121          void Timer1_SetPPGPolarity(uint8_t polarity) 
 122          {
 123   1        uint8_t temp_reg;
 124   1        
 125   1        temp_reg = T1CRL;
 126   1        temp_reg &= ~(0x04); 
 127   1        temp_reg |= (polarity << 2);
 128   1        
 129   1        T1CRL = temp_reg;
 130   1      }
 131          
 132          /**
 133          * @brief   Set Timer1 PPG mode duty counter
 134          * @param   count    This parameter contains the value of timer duty count(0~0xFFFF).
 135          * @return   None
 136          */
 137          void Timer1_SetPPGDutyCounter(uint16_t count) 
 138          {
 139   1        T1BDR = count;
 140   1      }
 141          
 142          /**
 143          * @brief   Set Timer1 PPG mode period counter
 144          * @param   count    This parameter contains the value of timer period count(1~0xFFFF).
 145          * @return   None
 146          */
 147          void Timer1_SetPPGPeriodCounter(uint16_t count) 
 148          {
 149   1        T1ADR = count;
 150   1      }
 151          
 152          
 153          /**
 154          * @brief   Get Timer1 Capture mode operation
 155          * @param   None
 156          * @return   The value of timer capture data(16bit)
 157          */
 158          uint16_t Timer1_GetCaptureValue(void) 
 159          {
 160   1        return T1BDR;
 161   1      }
 162          
 163          /**
 164          * @brief   Clear the value of Timer1 counter data 
 165          * @param   None
 166          * @return   None
 167          */
 168          void Timer1_ClearCountData(void) 
 169          {
 170   1        T1CRH |= 0x01;
 171   1      }
 172          
 173          /**
 174          * @brief    Start Timer1 operation
 175          * @param   None
 176          * @return   None
 177          */
 178          void Timer1_Start(void) 
C51 COMPILER V9.60.7.0   a96T428_TIMER1                                                    01/09/2025 13:29:42 PAGE 4   

 179          {
 180   1        T1CRH |= 0x80;
 181   1      }
 182          
 183          /**
 184          * @brief    Stop Timer1 operation
 185          * @param   None
 186          * @return   None
 187          */
 188          void Timer1_Stop(void) 
 189          {
 190   1        T1CRH &= ~0x80;
 191   1      }
 192          
 193          /**
 194          * @brief    Configure Timer1 interrupt
 195          * @param   enable   This parameter contains the enable of timer interrupt
 196          *
 197          *         - FLASE                       = 0
 198          *         - TRUE                        = 1
 199          * @return   None
 200          */
 201          void Timer1_ConfigureInterrupt(uint8_t enable) 
 202          {
 203   1        if(enable)
 204   1          IE2 |= 0x04;
 205   1        else
 206   1          IE2 &= ~0x04;
 207   1      }
 208          
 209          /**
 210          * @brief    Claer Timer1 interrupt
 211          * @param   None
 212          * @return   None
 213          */
 214          void Timer1_ClearInterruptFlag(void) 
 215          {
 216   1        T1CRL &= ~0x10;
 217   1      }
 218          
 219          void Timer1_Int_Flag_Polling(void) 
 220          {
 221   1        if(T1CRL & T1IFR) 
 222   1        {
 223   2          T1CRL &= ~T1IFR; 
 224   2          fTimer1_int=1;
 225   2        }
 226   1      }
 227          
 228          /* --------------------------------- End Of File ------------------------------ */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    152    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
